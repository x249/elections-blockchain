# use the latest ubuntu environment (18.04) available on travis
dist: xenial

language: go

# Force-enable Go modules. Also force go to use the code in vendor/
# These will both be unnecessary when Go 1.13 lands.
env:
  - GO111MODULE=on
  - GOFLAGS='-mod vendor'
  global:
    - secure: "dFOId+PGXJ4Ucwcoi1tab719TEFWT6uyIUwRXqYJdEEGke+8sA/1DTKCTkJ2QgErzu6NjwxTmWFCHkkF+S5PIsyGsiaz9SOBXhGTg3jOTm58V1wKK3ImKZxOYfPVNqHWAv9PdkwpxGE+xjq7ZkyHBHreIe+yELZqSwg3XjwvGtVCNGcxVEL92dM+xObLZ0UhnwG3QeB/Wf9Ed/LKf7MbiUemTCjVNrXzXtb3MQZ3vDg6t/7CRKIwuP8HryLvYMjiw7SCQhkMDFQRp++2fPzpi/8GR1sfT1LUIefjc7JGRevJi5ilxqwqdP/I2hT13iKIAOIK7zIBlSOBGAnlDSwjodriQVlWZzdk+tU9vrD10DTf3QOqD1iu8DNGrK93ElCc3pXooIhjfmjQt4TD2VKvQI91QAhHB5rqQH04KcTk5QBSQpYz/6TmWcfCnLQ/AVKPZcX+KKxqVmtTyF8oIflYfBQoCrDexPkJGzcX2Oz+L64zwMDDY81Wo4oURVV2wjzr9FtuCo+NctAKzYlAO6Ltua9Mt8T9xEPSVytk+3/SubfHfNAWGhbQal4JPoaImwuedoyp2aI+k5Z6v98+q5sn+iX97XPH0WTq+shSXmEJG8hTtU1dLV+lBwASbQeIZz+tSSeUulgLvRFrlNHNQPdTj+XTxkXd3qZvz/cZWUKI8z0="

go:
  - 1.12.x


# Only clone the most recent commit.
git:
  depth: 1

before_install:
  # decrypt private key
  - openssl aes-256-cbc -K $encrypted_81c951c9775b_key -iv $encrypted_81c951c9775b_iv -in .travis/github_deploy_key.enc -out github_deploy_key -d
  # Setup dependency management tool
  - curl -L -s https://github.com/golang/dep/releases/download/v0.5.4/dep-linux-amd64 -o $GOPATH/bin/dep
  - chmod +x $GOPATH/bin/dep

after_success:
  - |

       $(npm bin)/set-up-ssh --key "$encrypted_81c951c9775b_key" \
                             --iv "$encrypted_81c951c9775b_iv" \
                             --path-encrypted-key ".travis/github_deploy_key.enc"

install:
  - dep ensure

# Don't email me the results of the test runs.
notifications:
  email: false

# Anything in before_script that returns a nonzero exit code will flunk the
# build and immediately stop. It's sorta like having set -e enabled in bash.
# Make sure golangci-lint is vendored.
before_script:
  - go install github.com/golangci/golangci-lint/cmd/golangci-lint

# script always runs to completion (set +e). If we have linter issues AND a
# failing test, we want to see both. Configure golangci-lint with a
# .golangci.yml file at the top level of your repo.
script:
  - golangci-lint run       # run a bunch of code checkers/linters in parallel
  - go test -v -race ./...  # Run all the tests with the race detector enabled